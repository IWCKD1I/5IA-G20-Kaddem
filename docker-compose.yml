version: '3.8'

services:
  # MySQL Service
  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_DATABASE: kaddem_db
      MYSQL_USER: root
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - kaddem_network

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kaddem_app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/kaddem_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SERVER_SERVLET_CONTEXT_PATH=/kaddem
      - SERVER_PORT=8089
    depends_on:
      - db
    ports:
      - "8089:8089"
    networks:
      - kaddem_network

  # SonarQube Service
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonar_db:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    ports:
      - "9000:9000"
    depends_on:
      - sonar_db
    networks:
      - kaddem_network

  # PostgreSQL Database for SonarQube
  sonar_db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kaddem_network

# Volumes for persisting data
volumes:
  db_data:
  postgres_data:

# Network definition
networks:
  kaddem_network:
